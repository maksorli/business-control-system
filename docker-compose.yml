
services:
 
  admin_service:
    build:
      context: ./admin_service
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8003:8000"
    networks:
      - my_network
  task_service:
    build:
      context: ./task_service
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8005:8000"
    networks:
      - my_network


  org_service:
    build:
      context: ./org_service
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8004:8000"
    networks:
      - my_network

  team_service:
    build:
      context: ./team_service
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8002:8000"
    networks:
      - my_network



  users_service:
    build:
      context: ./users_service
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "8001:8000"
    networks:
      - my_network
  calendar_service:
    build:
      context: ./calendar_service
    depends_on:
      - db
      - kafka
    env_file:
      - .env
    ports:
      - "8006:8000"
    networks:
      - my_network
      

  db:
    image: postgres:15
    container_name: bcs_db
    restart: always
    environment:
      POSTGRES_USER: bcs
      POSTGRES_PASSWORD: password
      POSTGRES_DB: bcs
    ports:
      - "5434:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - my_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - my_network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my_network

volumes:
  pgdata:
 

networks:
  my_network:

  